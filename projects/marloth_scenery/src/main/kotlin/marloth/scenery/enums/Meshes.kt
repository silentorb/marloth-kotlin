package marloth.scenery.enums

// As long as there is MeshId reflection, its fields cannot be const
object MeshId {
  val billboard = "billboard"
  val candle = "candle"
  val cookie = "cookie"
  val hollowCircle = "hollowCircle"
  val cube = "cube"
  val eyeball = "eyeball"
  val grenadeLauncher = "grenadeLauncher"
  val hogHead = "hogHead"
  val key = "key"
  val line = "line"
  val missile = "missile"
  val pants = "pants"
  val personBody = "personBody"
  val pistol = "pistol"
  val prisonDoor = "prisonDoor"
  val pumpkinHead = "pumpkinHead"
  val sentinelHead = "sentinelHead"
  val shirt = "shirt"
  val shotgun = "shotgun"
  val skySphere = "skySphere"
  val sphere = "sphere"
  val spikyBall = "spikyBall"
  val treasureChest = "treasureChest"
  val wallLamp = "wallLamp"

  // Architecture

  val arcWall8thA = "arcWall8thA"
  val arcWall8thB = "arcWall8thB"
  val circleFloor = "circleFloor"
  val cornerSlope = "cornerSlope"
  val curvingStairStep = "curvingStairStep"
  val diagonalWall = "diagonalWall"
  val dirtDiagonalFloor = "dirtDiagonalFloor"
  val dirtFloor = "dirtFloor"
  val dirtWall = "dirtWall"
  val dirtWallDoorway = "dirtWallDoorway"
  val fillerColumn = "fillerColumn"
  val fullSlope = "fullSlope"
  val grassDiagonalFloor = "grassDiagonalFloor"
  val grassFloor = "grassFloor"
  val halfCircleFloor = "halfCircleFloor"
  val halfLengthWall = "halfLengthWall"
  val halfSquareFloor = "halfSquareFloor"
  val largeBrick = "largeBrick"
  val longPillowStep = "longPillowStep"
  val longStairStep = "longStairStep"
  val longStep = "longStep"
  val quarterSlopeOld = "quarterSlopeOld"
  val spiralStaircaseColumn = "spiralStaircaseColumn"
  val floorSquare = "floorSquare"
  val floorDiagonal = "floorDiagonal"
  val squareWallHalfHeight = "squareWallHalfHeight"
  val squareWallDoorway = "squareWallDoorway"
  val squareWallQuarterHeight = "squareWallQuarterHeight"
  val squareWallQuarterSlope = "squareWallQuarterSlope"
  val squareWallWindow = "squareWallWindow"
  val wallSquareShort = "wallSquareShort"

  // Props

  val branchingTree = "branchingTree"
  val lampPost = "lampPost"
}
